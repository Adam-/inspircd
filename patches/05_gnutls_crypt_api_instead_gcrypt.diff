Description: Use GnuTLS crypto API instead of gcrypt.
 This is a hand-appliead 690c372f6ef246b43b477e3685c8e716431427ad by Peter
 Powell from upstream git.
Bug-Debian: http://bugs.debian.org/745948
Origin: upstream, https://github.com/inspircd/inspircd/commit/690c372f6ef246b43b477e3685c8e716431427ad
Forwarded: not-needed
Last-Update: 2014-07-13

Index: inspircd-2.0.16/src/modules/extra/m_ssl_gnutls.cpp
===================================================================
--- inspircd-2.0.16.orig/src/modules/extra/m_ssl_gnutls.cpp
+++ inspircd-2.0.16/src/modules/extra/m_ssl_gnutls.cpp
@@ -22,12 +22,18 @@
 
 
 #include "inspircd.h"
-#include <gcrypt.h>
 #include <gnutls/gnutls.h>
 #include <gnutls/x509.h>
 #include "ssl.h"
 #include "m_cap.h"
 
+#if (GNUTLS_VERSION_MAJOR > 2 || GNUTLS_VERSION_MAJOR == 2 && GNUTLS_VERSION_MINOR > 12)
+# define GNUTLS_HAS_RND
+# include <gnutls/crypto.h>
+#else
+# include <gcrypt.h>
+#endif
+
 #ifdef _WIN32
 # pragma comment(lib, "libgnutls.lib")
 # pragma comment(lib, "libgcrypt.lib")
@@ -40,9 +46,8 @@
 #endif
 
 /* $ModDesc: Provides SSL support for clients */
-/* $CompileFlags: pkgconfincludes("gnutls","/gnutls/gnutls.h","") exec("libgcrypt-config --cflags") */
-/* $LinkerFlags: pkgconflibs("gnutls","/libgnutls.so","-lgnutls") exec("libgcrypt-config --libs") */
-/* $NoPedantic */
+/* $CompileFlags: pkgconfincludes("gnutls","/gnutls/gnutls.h","") eval("print `libgcrypt-config --cflags | tr -d \r` if `pkg-config --modversion gnutls 2>/dev/null | tr -d \r` lt '2.12'") -Wno-pedantic */
+/* $LinkerFlags: rpath("pkg-config --libs gnutls") pkgconflibs("gnutls","/libgnutls.so","-lgnutls") eval("print `libgcrypt-config --libs | tr -d \r` if `pkg-config --modversion gnutls 2>/dev/null | tr -d \r` lt '2.12'") */
 
 #ifndef GNUTLS_VERSION_MAJOR
 #define GNUTLS_VERSION_MAJOR LIBGNUTLS_VERSION_MAJOR
@@ -89,7 +94,11 @@ class RandGen : public HandlerBase2<void
 	RandGen() {}
 	void Call(char* buffer, size_t len)
 	{
+#ifdef GNUTLS_HAS_RND
+		gnutls_rnd(GNUTLS_RND_RANDOM, buffer, len);
+#else
 		gcry_randomize(buffer, len, GCRY_STRONG_RANDOM);
+#endif
 	}
 };
 
@@ -250,7 +259,9 @@ class ModuleSSLGnuTLS : public Module
 	ModuleSSLGnuTLS()
 		: starttls(this), capHandler(this, "tls"), iohook(this, "ssl/gnutls", SERVICE_IOHOOK)
 	{
+#ifndef GNUTLS_HAS_RND
 		gcry_control (GCRYCTL_INITIALIZATION_FINISHED, 0);
+#endif
 
 		sessions = new issl_session[ServerInstance->SE->GetMaxFds()];
 
